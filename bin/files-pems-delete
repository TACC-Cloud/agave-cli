#!/usr/bin/env python
"""
Remove all user permissions, execpet from the owner's, from a file or folder.
For all but iRODS systems, these permissions are set at the API level and do 
not reflect *nix or other file system ACL. On iRODS systems, if the 
system.storageConfig.mirror attribute is set to true then any permissions set 
via the API will be mirrored onto the remote system.

To recursively remove permissions, use the files-pems-update script setting the
permission to NONE for each user. This script cannot perform recursive permission
operations.

Flags:
  -h, --help            Display this help and exit
"""
from __future__ import print_function
import argparse
import os
import sys
from agavepy.agave import Agave

parser = argparse.ArgumentParser(
    description=
    "Delete all user permissions (except the owner's) associated with a file or folder"
)

parser.add_argument(
    "-c",
    "--cachedir",
    default=os.path.expanduser("~/.agave"),
    help="Directory in which confiurations are saved in.")

parser.add_argument("filepath", help="Path to list")

if __name__ == "__main__":
    args = parser.parse_args()

    agave = Agave()
    cache_dir = args.cachedir
    uri = args.filepath

    config_file = "{}/config.json".format(cache_dir)
    # Check if there is a session already saved.
    if os.path.exists(config_file):
        agave.load_configs(cache_dir=cache_dir)
    else:
        print("You need to initiate a session first. Use auth-sessions-init")
        sys.exit(1)

    # Refresh tokens if necessary.
    agave.refresh_tokens()

    # Obtain uri - remove the prefix 'agave://'.
    uri = uri[len("agave://"):]

    # Delete all user's permissions.
    agave.files_pems_delete(uri)
