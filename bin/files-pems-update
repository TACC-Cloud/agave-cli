#!/usr/bin/env python
"""
    Usage: files-pems-update [flags] agave://path

Edit user permissions on a file or folder. For all but iRODS systems, these
permissions are set at the API level and do not reflect *nix or other file
system ACL. On iRODS systems, if the system.storageConfig.mirror attribute
is set to true then any permissions set via the API will be mirrored onto
the remote system.

Also remember that no permissions can be set on public files and folders.

Flags:
  -u, --username        The user whose permissions should be listed
  -p, --permission      The permission to set. Valid values are READ,
                        WRITE, EXECUTE, READ_WRITE, READ_EXECUTE,
                        WRITE_EXECUTE, ALL, and NONE
  -r, --recursive       Recursively apply permissions to folder contents
  -h, --help            Display this help and exit
"""
from __future__ import print_function
import argparse
import os
import sys
from agavepy.agave import Agave

parser = argparse.ArgumentParser(
    description="Edit user permissions associated with a file or folder")

parser.add_argument(
    "-c",
    "--cachedir",
    default=os.path.expanduser("~/.agave"),
    help="Directory in which confiurations are saved in.")

parser.add_argument("filepath", help="Path to list")

parser.add_argument("-u", "--username", help="Edit user's permissions.")

parser.add_argument(
    "-p",
    "--permission",
    choices=[
        "READ", "WRITE", "EXECUTE", "READ_WRITE", "READ_EXECUTE",
        "WRITE_EXECUTE", "ALL", "NONE"
    ],
    help="Permission to set.")

parser.add_argument(
    "-r",
    "--recursive",
    action="store_true",
    help="Recursively apply permissions to folder contents")

if __name__ == "__main__":
    args = parser.parse_args()

    agave = Agave()
    cache_dir = args.cachedir
    uri = args.filepath
    username = args.username
    permissions = args.permission
    recursive = args.recursive

    config_file = "{}/config.json".format(cache_dir)
    # Check if there is a session already saved.
    if os.path.exists(config_file):
        agave.load_configs(cache_dir=cache_dir)
    else:
        print("You need to initiate a session first. Use auth-sessions-init")
        sys.exit(1)

    # Refresh tokens if necessary.
    agave.refresh_tokens()

    # Obtain uri - remove the prefix 'agave://'.
    uri = uri[len("agave://"):]

    # List files on remote system.
    agave.files_pems_update(uri, username, permissions, recursive=recursive)
