#!/usr/bin/env python
"""
    Usage: files-cp [Flags] agave://source agave://destination

Copy files to a remote system, from a remote system, and in remote systems. 
The path must be specified as an agave uri - must be prefixed by 'agave://'.

    Example:
        files-cp file.ext agave://systemId/path/file.ext

        files-cp agave://systemId/path/to/file.ext local.ext

        files-cp agave://systemId/file.ext agave://systemId/new.ext

Flags:
    -c, --cachedir    Directory where confiurations are saved in
"""
from __future__ import print_function
import argparse
import os
import sys
from agavepy.agave import Agave

parser = argparse.ArgumentParser(
    description="Copy files to/from/between remote systems")

parser.add_argument(
    "-c",
    "--cachedir",
    default=os.path.expanduser("~/.agave"),
    help="Directory in which confiurations are saved in.")

parser.add_argument(
    "source",
    action="store",
    help="Source (for remote systems prefix with agave://)")

parser.add_argument(
    "destination",
    action="store",
    help="Destination (for remote systems prefix with agave://)")

if __name__ == "__main__":
    args = parser.parse_args()
    cache_dir = args.cachedir
    source = args.source
    destination = args.destination

    agave = Agave()

    config_file = "{}/config.json".format(cache_dir)
    # Check if there is a session already saved.
    if os.path.exists(config_file):
        agave.load_configs(cache_dir=cache_dir)
    else:
        print("You need to initiate a session first. Use auth-sessions-init")
        sys.exit(1)

    # Refresh tokens if necessary.
    agave.refresh_tokens()

    # Parse source and destination arguments.
    source_remote = False
    destination_remote = False
    if source.startswith("agave://"):
        source_remote = True
        source = source[len("agave://"):]

    if destination.startswith("agave://"):
        destination_remote = True
        destination = destination[len("agave://"):]

    # Copy file from one location to another within a remote storage system.
    if source_remote and destination_remote:
        agave.files_copy(source, destination)
    # Download a file from a remote system to the host.
    elif source_remote and not destination_remote:
        destination = os.path.abspath(destination)
        agave.files_download(source, destination)
    # Upload a fle from the host to a remote system.
    elif not source_remote and destination_remote:
        source = os.path.abspath(source)
        agave.files_upload(source, destination)
